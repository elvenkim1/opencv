# -*- coding: utf-8 -*-
"""15fEB_CONVERT _TO DAWN/DUSK PICTURE

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dej59KHLAAFPg4cnJjUGqhMSoZmLFNTV

A) HOW TO MEASURE LUX LEVEL
"""

import cv2
import numpy as np

image_path = '/content/darkened_image.png'

def estimate_lux(image_path, k=0.5):
    # Load image
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

    # Check if image was loaded successfully
    if image is not None:
        # Compute average pixel intensity
        avg_intensity = np.mean(image)

        # Convert to lux
        lux_value = k * avg_intensity

        return lux_value
    else:
        print(f"Error: Could not load image at {image_path}")
        return None  # or raise an exception if you prefer


lux = estimate_lux(image_path)  # Use the original image_path
if lux is not None:
    print(f"Estimated Lux: {lux}")

"""B) HOW TO CONVERT PICTURE TO DAWN/DUSK PICTURE"""

import cv2
import numpy as np
from PIL import Image, ImageEnhance
image_path = 'doraemon_day.png'
output_path = '/content'

def apply_dawn_effect(image_path, output_path):
    # Load image
    image = cv2.imread('/content/doraemon_day.png')

    # Convert to HSV for color adjustment
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    # Increase warmth (adjust Hue)
    h, s, v = cv2.split(hsv)
    h = cv2.add(h, 10)  # Increase hue to shift towards warmer tones
    s = cv2.add(s, 30)  # Boost saturation for a richer effect

    # Merge back
    hsv_dawn = cv2.merge([h, s, v])
    dawn_image = cv2.cvtColor(hsv_dawn, cv2.COLOR_HSV2BGR)

    # Convert to PIL for further enhancement
    dawn_pil = Image.fromarray(cv2.cvtColor(dawn_image, cv2.COLOR_BGR2RGB))

    # Enhance brightness and contrast
    enhancer = ImageEnhance.Brightness(dawn_pil)
    dawn_pil = enhancer.enhance(0.8)  # Reduce brightness slightly

    enhancer = ImageEnhance.Contrast(dawn_pil)
    dawn_pil = enhancer.enhance(1.2)  # Increase contrast

    # Save the modified image
    dawn_pil.save('/content/dawn_image_dawn.png')
    print(f"Dawn effect applied and saved as {output_path}")

# Apply to your image
apply_dawn_effect("your_image.png", "dawn_image.png")

"""C) HOW TO CONVERT PICTURE TO DIM LIGHTING"""

import cv2
import numpy as np
from PIL import Image, ImageEnhance

def apply_darkness_effect(image_path, output_path, brightness_factor=0.4, contrast_factor=1.2):
    # Load image using OpenCV
    image = cv2.imread('/content/doraemon_day.png')

    # Convert to HSV (Hue, Saturation, Value)
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

    # Reduce brightness (Value channel)
    h, s, v = cv2.split(hsv)
    v = np.clip(v * brightness_factor, 0, 255).astype(np.uint8)  # Reduce brightness

    # Merge back
    dark_hsv = cv2.merge([h, s, v])
    dark_image = cv2.cvtColor(dark_hsv, cv2.COLOR_HSV2BGR)

    # Convert to PIL for more adjustments
    dark_pil = Image.fromarray(cv2.cvtColor(dark_image, cv2.COLOR_BGR2RGB))

    # Enhance contrast slightly
    enhancer = ImageEnhance.Contrast(dark_pil)
    dark_pil = enhancer.enhance(contrast_factor)

    # Save the output
    dark_pil.save(output_path)
    print(f"Darkened image saved as {output_path}")

# Apply darkness effect
apply_darkness_effect("your_image.png", "darkened_image.png")

